<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>suryapolina.com</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- SEO Meta Tags -->
    <meta name="description" content="Explore Surya Polina's website about stuff">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.1.2/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css">
    <link rel="stylesheet" type="text/css" href="/static/styles.css" />
    <link rel="icon" type="image/png" href="/images/favicon.ico">
</head>

<body class="bg-white text-gray-900">
    <!-- Header -->
    <header class="text-center py-6">
        <nav class="mt-4">
            <a href="/about" class="text-blue-600 hover:text-purple-800 mx-2">About</a>
            <a href="/blog" class="text-blue-600 hover:text-purple-800 mx-2">Blog</a>
            <a href="/portfolio" class="text-blue-600 hover:text-purple-800 mx-2">My Pages</a>
        </nav>
    </header>

    <!-- Main Content -->
    <div class="container mx-auto px-4 py-2">
        <div class="grid max-w-2xl mx-auto">
            <!-- About Me Section -->
            <div id="about-me-card" class="border border-gray-200 p-6 rounded-2xl bg-white">
                <!-- English Paragraph -->
                <p id="about-text-en" class="text-left text-gray-600 leading-relaxed mb-6"> 
                    I'm a web developer. I'm also a Cleveland Cavs and Ravens fan, don't ask why.
                    Learn more about me on this page. 
                </p>
                <!-- Spanish Paragraph -->
                <p id="about-text-es" class="text-left text-gray-600 leading-relaxed mb-6 hidden"> 
                    Soy ingeniero de software y/o desarrollador web. También soy fan de los Cleveland Cavaliers y los Baltimore Ravens.
                    Conoce más sobre mí en esta página.
                </p>
                
                <!-- Toggle for more information -->
                <div id="qa" class="flex flex-col items-center mt-6">
                    <div class="w-full max-w-xs mb-4">
                        <select id="question-select" 
                                class="w-full p-2 rounded-xl border border-gray-200 text-gray-700 focus:outline-none focus:border-blue-400 focus:ring-1 focus:ring-blue-400">
                            <option>Q/A</option>
                        </select>
                    </div>
                    <div id="answer" class="text-gray-600 mt-2 text-center"></div>
                </div>
            </div>
        </div>      
        
        <!-- Language Toggle Button -->
        <div class="text-center mt-8">
            <button id="translate-toggle" 
                    class="px-4 py-2 border border-gray-200 text-gray-700 font-medium rounded-xl shadow-sm hover:shadow-md transition-all duration-200">
                español
            </button>
        </div>      

        <!-- Contact Section -->
        <div class="text-center mt-8">
            <a href="mailto:thesuryapolina@gmail.com" class="text-gray-500 hover:text-gray-700 transition-all mr-4">
                <i class="fas fa-envelope fa-lg"></i>
            </a>
            <a href="https://twitter.com/suryapolina" target="_blank" class="text-gray-500 hover:text-gray-700 transition-all">
                <i class="fab fa-twitter fa-lg"></i>
            </a>
        </div>
    </div>

    <script>
        let currentLanguage = 'en';
        let selectedQuestion = '';  // To keep track of the selected question

        // Toggle for language translation
        document.getElementById('translate-toggle').addEventListener('click', function() {
            const englishText = document.getElementById('about-text-en');
            const spanishText = document.getElementById('about-text-es');

            // Toggle visibility of about text paragraphs
            englishText.classList.toggle('hidden');
            spanishText.classList.toggle('hidden');

            // Switch the language
            currentLanguage = currentLanguage === 'en' ? 'es' : 'en';
            
            // Update button text to reflect the other language
            this.innerText = currentLanguage === 'en' ? 'español' : 'english';

            // Populate questions in the dropdown
            populateQuestions();

            // Update answer based on selected question
            if (selectedQuestion) {
                document.getElementById('answer').innerText = qa[currentLanguage][selectedQuestion] || '';
            }
        });

        const qa = {
            en: {
                "favorite food?": "pancakes + syrup",
                "hobbies?": "basketball, movies, cooking",
                "favorite movie?": "Matrix",
                "middle name?": "Surya Alexander Polina sounds nice",
                "current time?": getCurrentCentralTime() + " (Central Time)",
                "married?": "dm open",
                "favorite color?": "green",
                "video games?": "NBA 2K12, Pokemon",
                "dreams?": "entrepreneur",
                "religion?": "Hindu",
                "morning or night?": "night",
                "dogs or cats?": "dogs",
                "programming language?": "java, javascript",
                "first phone?": "SE C905",
                "favorite app?": "Soundcloud",
                "favorite fruit?": "pineapple",
                "favorite song?": "Money trees. Cherish the day, Superstar",
                "where do you live?": "Dallas",
                "idols?": "Kyrie Irving, Lamar Jackson, Lebron James, Spider-man",
                "grocery store?": "Sprouts",
            },
            es: {
                "¿comida favorita?": "panqueques",
                "¿pasatiempos?": "baloncesto, navegar, películas, cocinar",
                "¿película favorita?": "Matrix",
                "¿segundo nombre?": "Surya Alexander Polina suena bien",
                "¿qué hora es?": getCurrentCentralTime() + " (Hora Central)",
                "¿casado?": "los mensajes directos están abiertos",
                "¿color favorito?": "verde",
                "¿videojuegos?": "NBA 2K12, Pokémon",
                "¿sueño?": "emprendedor",
                "¿religión?": "Hinduismo",
                "¿mañanas o noches?": "noches",
                "¿perros o gatos?": "perros",
                "¿lenguaje de programación?": "java, javascript",
                "¿primer teléfono?": "SE C905",
                "¿aplicación favorita?": "Soundcloud",
                "¿fruta favorita?": "piña",
                "¿canción favorita?": "Money trees, Cherish the day, Superstar",
                "¿dónde vives?": "Dallas",
                "¿ídolos?": "Kyrie Irving, Lamar Jackson, LeBron James, Spider-Man",
                "¿supermercado?": "Sprouts"
            }
        };

        // Populate the dropdown with questions based on the current language
        function populateQuestions() {
            const questionSelect = document.getElementById('question-select');
            questionSelect.innerHTML = ''; // Clear existing options

            // Set the default "Select question" option based on the current language
            const defaultOption = document.createElement('option');
            defaultOption.value = "";
            defaultOption.textContent = currentLanguage === 'en' ? 'question' : 'pregunta';
            questionSelect.appendChild(defaultOption);

            // Populate the dropdown with questions
            for (const question in qa[currentLanguage]) {
                const option = document.createElement('option');
                option.value = question;
                option.textContent = question;
                questionSelect.appendChild(option);
            }
        }

        // Handle dropdown selection
        document.getElementById('question-select').addEventListener('change', function() {
            selectedQuestion = this.value;
            document.getElementById('answer').innerText = qa[currentLanguage][selectedQuestion] || '';
        });

        // Initial population of questions
        populateQuestions();

        function getCurrentCentralTime() {
            const centralTimeZone = 'America/Chicago';
            const centralTime = new Intl.DateTimeFormat('en-US', {
                timeZone: centralTimeZone,
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false,
            }).format(new Date());

            return centralTime;
        }
    </script>
</body>
</html>