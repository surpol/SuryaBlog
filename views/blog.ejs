<!DOCTYPE html>
<html>

<head>
    <title>suryapolina.com</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.1.2/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css">
    <link rel="stylesheet" type="text/css" href="/static/styles.css" />
    <link rel="icon" type="image/png" href="/images/favicon.ico">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/masonry/4.2.2/masonry.pkgd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/draggabilly/3.0.0/draggabilly.pkgd.min.js"></script>
    <style>
        .masonry-grid-item {
            position: relative;
            z-index: 1;
            transition: none; /* Disable transitions to prevent layout thrashing */
        }
    </style>
</head>

<body>
    <!-- Header --->
    <div class="flex flex-col min-h-screen">
        <header class="text-center py-5">
            <div class="flex flex-col items-center">
                <h1 class="text-3xl font-bold"><a href="/blog">Surya Polina</a></h1>
            </div>
            <nav class="mt-4">
                <a href="/blog" class="text-blue-800 hover:text-blue-700 mx-2">Blog</a>
                <a href="/portfolio" class="text-blue-800 hover:text-blue-700 mx-2">Portfolio</a>
            </nav>
        </header>
        <!-- Masonry Grid -->
        <!-- Add the 'masonry-grid-hidden' class to initially hide the Masonry grid -->
        <div class="masonry-grid masonry-grid-hidden">
            <% posts.forEach(function(post, index) { %>
            <!-- Adjust width and margin classes as needed -->
            <div class="masonry-grid-item">
                <a href="/blog/<%= post.id %>" class="no-underline text-black">
                    <div class="bg-white shadow-lg hover:bg-blue-100 overflow-hidden p-3">
                        <h2 class="text-lg font-bold"><%= post.title %></h2>
                        <% if (post.imagePath) { %>
                        <img src="<%= post.imagePath %>" alt="Thumbnail" class="w-full p-3">
                        <% } %>
                        <p class="mb-1 text-sm"><%= post.preview %></p>
                        <div>
                            <% post.tags.forEach(function(tag) { %>
                            <a href="/blog/tag/<%= tag %>"
                                class="bg-gray-200 px-2 py-1 text-xs font-semibold text-gray-700 hover:bg-gray-300 inline-block"
                                onclick="event.stopPropagation();">
                                <%= tag %>
                            </a>
                            <% }) %>
                        </div>
                    </div>
                </a>
            </div>
            <% }); %>
        </div>
        <!-- Footer --->
        <footer class="mt-auto" style="background-color: #fcfcfc;">
            <div class="text-center py-5">
                <p> thesuryapolina@gmail.com </p>
            </div>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            initializeMasonry();
        });

        function initializeMasonry() {
            if (areThumbnailsLoaded()) {
                setupMasonryGrid();
            } else {
                // If not all images are loaded, check again after a short delay
                setTimeout(initializeMasonry, 100);
            }
        }

        function areThumbnailsLoaded() {
            return Array.from(document.images).every(image => image.complete);
        }

        function setupMasonryGrid() {
            const grid = document.querySelector('.masonry-grid');
            grid.classList.remove('masonry-grid-hidden'); // Display the Masonry grid

            const msnry = new Masonry(grid, {
                itemSelector: '.masonry-grid-item',
                columnWidth: '.masonry-grid-item',
                fitWidth: true,
                gutter: 8 // Space between the items
            });

            // Initialize Draggabilly for each item
            initializeDraggabilly(grid, msnry);
        }

        function initializeDraggabilly(grid, msnry) {
            const draggableElems = grid.querySelectorAll('.masonry-grid-item');
            draggableElems.forEach(itemElem => {
                const draggie = new Draggabilly(itemElem);

                // Bind drag events to Masonry
                draggie.on('dragStart', () => {
                    itemElem.style.zIndex = '2'; // Bring to the front
                    itemElem.style.transition = 'none'; // Disable transition
                });

                draggie.on('dragEnd', () => {
                    itemElem.style.zIndex = '';
                    itemElem.style.transition = ''; // Re-enable transition
                    msnry.layout(); // Re-layout Masonry
                });

                // Throttle the dragMove event
                draggie.on('dragMove', throttle(() => {
                    msnry.layout(); // Re-layout Masonry on move
                }, 50));
            });
        }

        function throttle(fn, limit) {
            let inThrottle;
            return function () {
                const args = arguments;
                const context = this;
                if (!inThrottle) {
                    fn.apply(context, args);
                    inThrottle = true;
                    setTimeout(() => inThrottle = false, limit);
                }
            }
        }
    </script>
</body>

</html>
